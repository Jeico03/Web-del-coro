// Character data with photos
const characters = [
	{
		id: 1,
		name: "Zelko",
		role: "El Mentor y Gu칤a",
		birthDate: "23 de Julio, 2004",
		initial: "Z",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Zelko.jpg-ZOvTsziAw2638B79AK6m0R9G953MGg.jpeg", // Zelko.jpg
		description:
			"El mayor del grupo y antiguo l칤der, Zelko es esa figura paternal que todos necesitamos. Con su experiencia y sabidur칤a, ha sido el pilar fundamental del coro durante a침os. Su personalidad tranquila y reflexiva lo convierte en el consejero perfecto para cualquier situaci칩n. Siempre dispuesto a escuchar y ofrecer su apoyo, Zelko tiene esa habilidad especial de ayudar a cada miembro a encontrar su propio camino y desarrollar su potencial.",
		quote:
			"El verdadero poder no est치 en mandar, sino en saber cu치ndo dar el paso al costado.",
		isLeader: false,
	},
	{
		id: 2,
		name: "Godoy",
		role: "El Alma Alegre",
		birthDate: "13 de Septiembre, 2006",
		initial: "G",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Godoy.jpg-E76GAHkHbB9zkrWU8V3k6dnKtMEezL.jpeg", // Godoy.jpg
		description:
			"Hermano menor de Zelko, Godoy es pura energ칤a positiva. Su carisma natural y su incre칤ble sentido del humor lo convierten en el coraz칩n alegre del grupo. Tiene esa capacidad m치gica de transformar cualquier momento dif칤cil en una oportunidad para sonre칤r. Su personalidad extrovertida y su habilidad para conectar con todos hacen que sea imposible estar triste cuando 칠l est치 cerca.",
		quote: "La risa es el idioma universal que une corazones y sana almas.",
		isLeader: false,
	},
	{
		id: 3,
		name: "Bambe",
		role: "El Esp칤ritu Aventurero",
		birthDate: "6 de Febrero, 2008",
		initial: "B",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Bambe.jpg-xGDqH5bYPI5cmU5dEId40COwaObInS.jpeg", // Bambe.jpg
		description:
			"El m치s cercano a Zelko, Bambe es sin칩nimo de diversi칩n y aventura. Su personalidad espont치nea y su creatividad para las 'loqueras' hacen que cada d칤a sea una nueva aventura. Es uno de los tigueres m치s bacanos del coro, siempre listo para probar algo nuevo o para sacar al grupo de la rutina con sus ideas innovadoras.",
		quote: "Donde hay Bambe, hay aventura. Donde hay aventura, hay vida.",
		isLeader: false,
	},
	{
		id: 4,
		name: "Braylin",
		role: "El Compa침ero Leal",
		birthDate: "14 de Mayo, 2008",
		initial: "BR",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Braylin.jpg-WFX8rnAn7QWoEoL5uegbr6HwVbvBBP.jpeg", // Braylin.jpg
		description:
			"Con una personalidad 'pila de corita' y s칰per bacano, Braylin es ese amigo en el que siempre puedes confiar. Su cercan칤a especial con Bambe crea una dupla din치mica dentro del grupo. Es una persona genuina y aut칠ntica, que aporta estabilidad y confianza al coro. Su naturaleza colaborativa y su actitud positiva lo convierten en un elemento clave para la armon칤a del grupo.",
		quote: "La lealtad no se negocia, se vive y se demuestra cada d칤a.",
		isLeader: false,
	},
	{
		id: 5,
		name: "Bryan",
		role: "La Conexi칩n Internacional",
		birthDate: "6 de Enero, 2010",
		initial: "BY",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Bryan.jpg-dMU7Cnbmhty5dRsTDsVR4ejn3cmcqh.jpeg", // Bryan.jpg
		description:
			"Viviendo en Cranston, Rhode Island, Bryan representa la dimensi칩n internacional del coro. Su experiencia bicultural aporta una perspectiva 칰nica al grupo, enriqueciendo las conversaciones y ampliando horizontes. A pesar de la distancia f칤sica, su conexi칩n emocional con el coro permanece fuerte, demostrando que la amistad verdadera trasciende fronteras.",
		quote: "Las distancias se miden en kil칩metros, la hermandad en corazones.",
		isLeader: false,
	},
	{
		id: 6,
		name: "Disney",
		role: "El Coraz칩n Solidario",
		birthDate: "25 de Julio, 2008",
		initial: "D",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Disney.jpg-On4jiztn1k40cVwheJdtoV1z5N0KIi.jpeg", // Disney.jpg
		description:
			"Disney es esa persona especial que siempre est치 ah칤 para los dem치s, sin importar las circunstancias. Su naturaleza altruista y su capacidad de empat칤a la convierten en un pilar emocional dentro del grupo. Su amistad cercana con Karelys demuestra su habilidad para crear v칤nculos profundos y duraderos.",
		quote:
			"El verdadero poder est치 en levantar a otros cuando m치s lo necesitan.",
		isLeader: false,
	},
	{
		id: 7,
		name: "Karelys",
		role: "La Guerrera Incansable",
		birthDate: "28 de Octubre, 2009",
		initial: "K",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/La%20hermosa%20sonrisa%20de%20Karelys%202.jpg-rAMviOZUDZlD0w2dHq3GLpcBhiwccH.jpeg", // Karelys.jpg
		description:
			"Venezolana de coraz칩n pero dominicana de adopci칩n, Karelys representa la fortaleza hecha persona. Su incre칤ble resistencia mental y su capacidad de adaptaci칩n son verdaderamente admirables. A pesar de los desaf칤os que ha enfrentado, siempre encuentra tiempo y energ칤a para preocuparse por el bienestar de los dem치s.",
		quote:
			"Las ra칤ces pueden cambiar de tierra, pero el alma permanece inquebrantable.",
		isLeader: false,
	},
	{
		id: 8,
		name: "Aisha",
		role: "La Sanadora de Almas",
		birthDate: "18 de Mayo, 2008",
		initial: "A",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Aisha.jpg-2q2eDMxy89W2tRHIuGZlYWh1KEsS8D.jpeg", // Aisha.jpg
		description:
			"Con una personalidad reservada pero profundamente emp치tica, Aisha aporta una dimensi칩n psicol칩gica 칰nica al grupo. Su cercan칤a especial con Karelys muestra su capacidad para formar conexiones significativas. Metida de lleno en su papel de psic칩loga, Aisha combina su conocimiento profesional con una genuina preocupaci칩n por el bienestar mental de todos.",
		quote:
			"Las palabras m치s poderosas a veces son las que nunca se pronuncian, sino las que se sienten.",
		isLeader: false,
	},
	{
		id: 9,
		name: "Jeico",
		role: "El Nuevo L칤der Visionario",
		birthDate: "3 de Diciembre, 2006",
		initial: "J",
		photo:
			"https://hebbkx1anhila5yf.public.blob.vercel-storage.com/Jeico.jpg-AiUtZ8TKOoHXL5aiBi6ipOKEwBM8Lr.jpeg", // Jeico.jpg
		description:
			"El nuevo jefe del grupo, Jeico aporta una perspectiva fresca y ambiciosa al liderazgo. Su personalidad tranquila pero determinada, combinada con ideas muy claras, lo convierte en el l칤der ideal para esta nueva etapa. Como observador nato, tiene la habilidad de analizar situaciones y tomar decisiones estrat칠gicas que beneficien a todo el grupo.",
		quote:
			"El futuro pertenece a quienes se atreven a so침ar m치s alto que las monta침as.",
		isLeader: true,
	},
];

// Global variables
let currentIndex = 0;
let isAnimating = false;

// DOM elements
const characterName = document.getElementById("characterName");
const characterRole = document.getElementById("characterRole");
const characterBirthDate = document.getElementById("characterBirthDate");
const characterDescription = document.getElementById("characterDescription");
const characterQuote = document.getElementById("characterQuote");
const characterPhoto = document.getElementById("characterPhoto");
const characterInitial = document.getElementById("characterInitial");
const leaderBadge = document.getElementById("leaderBadge");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");
const indicators = document.getElementById("indicators");
const characterGrid = document.getElementById("characterGrid");
const currentSlide = document.getElementById("currentSlide");
const totalSlides = document.getElementById("totalSlides");

// Initialize the slider
function init() {
	createParticles();
	createIndicators();
	createCharacterGrid();
	updateSlide();
	setupEventListeners();

	// Set total slides
	totalSlides.textContent = characters.length;
}

// Create floating particles
function createParticles() {
	const particlesContainer = document.getElementById("particles");
	const particleCount = 50;

	for (let i = 0; i < particleCount; i++) {
		const particle = document.createElement("div");
		particle.className = "particle";
		particle.style.left = Math.random() * 100 + "%";
		particle.style.animationDelay = Math.random() * 6 + "s";
		particle.style.animationDuration = Math.random() * 3 + 3 + "s";
		particlesContainer.appendChild(particle);
	}
}

// Create slide indicators
function createIndicators() {
	indicators.innerHTML = "";
	characters.forEach((_, index) => {
		const indicator = document.createElement("div");
		indicator.className = "indicator";
		if (index === currentIndex) indicator.classList.add("active");
		indicator.addEventListener("click", () => goToSlide(index));
		indicators.appendChild(indicator);
	});
}

// Create character grid
function createCharacterGrid() {
	characterGrid.innerHTML = "";
	characters.forEach((character, index) => {
		const gridItem = document.createElement("div");
		gridItem.className = "grid-character";
		if (index === currentIndex) gridItem.classList.add("active");

		gridItem.innerHTML = `
            <div class="grid-avatar ${index === currentIndex ? "active" : ""}">
                <img src="${character.photo}" alt="${
			character.name
		}" class="grid-character-photo" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                <span class="grid-character-initial" style="display: none;">${
									character.initial
								}</span>
                ${
									character.isLeader
										? '<span class="grid-leader-crown">游녬</span>'
										: ""
								}
            </div>
            <p class="grid-character-name">${character.name}</p>
        `;

		gridItem.addEventListener("click", () => goToSlide(index));
		characterGrid.appendChild(gridItem);
	});
}

// Update slide content
function updateSlide() {
	if (isAnimating) return;

	const character = characters[currentIndex];

	// Update text content with animation
	characterName.style.opacity = "0";
	characterRole.style.opacity = "0";
	characterBirthDate.style.opacity = "0";
	characterDescription.style.opacity = "0";

	setTimeout(() => {
		characterName.textContent = character.name;
		characterRole.textContent = character.role;
		characterBirthDate.textContent = character.birthDate;
		characterDescription.textContent = character.description;

		// Animate text back in
		characterName.style.opacity = "1";
		characterRole.style.opacity = "1";
		characterBirthDate.style.opacity = "1";
		characterDescription.style.opacity = "1";
	}, 200);

	// Update photo with better error handling
	characterPhoto.style.display = "block";
	characterInitial.style.display = "none";

	characterPhoto.onload = function () {
		this.style.opacity = "1";
		characterInitial.style.display = "none";
	};

	characterPhoto.onerror = function () {
		this.style.display = "none";
		characterInitial.style.display = "flex";
		characterInitial.textContent = character.initial;
	};

	characterPhoto.src = character.photo;
	characterPhoto.alt = character.name;

	// Update quote
	if (character.quote) {
		characterQuote.textContent = character.quote;
		characterQuote.classList.add("show");
	} else {
		characterQuote.classList.remove("show");
	}

	// Update leader badge
	if (character.isLeader) {
		leaderBadge.classList.add("show");
	} else {
		leaderBadge.classList.remove("show");
	}

	// Update indicators
	document.querySelectorAll(".indicator").forEach((indicator, index) => {
		indicator.classList.toggle("active", index === currentIndex);
	});

	// Update character grid
	document.querySelectorAll(".grid-character").forEach((gridItem, index) => {
		const avatar = gridItem.querySelector(".grid-avatar");
		avatar.classList.toggle("active", index === currentIndex);
	});

	// Update counter
	currentSlide.textContent = currentIndex + 1;
}

// Go to specific slide
function goToSlide(index) {
	if (isAnimating || index === currentIndex) return;

	isAnimating = true;
	currentIndex = index;

	// Add slide transition effect
	const sliderCard = document.querySelector(".slider-card");
	sliderCard.style.transform = "scale(0.95)";
	sliderCard.style.opacity = "0.7";

	setTimeout(() => {
		updateSlide();
		sliderCard.style.transform = "scale(1)";
		sliderCard.style.opacity = "1";
		isAnimating = false;
	}, 300);
}

// Next slide
function nextSlide() {
	const nextIndex = (currentIndex + 1) % characters.length;
	goToSlide(nextIndex);
}

// Previous slide
function prevSlide() {
	const prevIndex = (currentIndex - 1 + characters.length) % characters.length;
	goToSlide(prevIndex);
}

// Setup event listeners
function setupEventListeners() {
	prevBtn.addEventListener("click", prevSlide);
	nextBtn.addEventListener("click", nextSlide);

	// Keyboard navigation
	document.addEventListener("keydown", e => {
		if (e.key === "ArrowLeft") prevSlide();
		if (e.key === "ArrowRight") nextSlide();
	});

	// Touch/swipe support
	let startX = 0;
	let endX = 0;

	document.addEventListener("touchstart", e => {
		startX = e.touches[0].clientX;
	});

	document.addEventListener("touchend", e => {
		endX = e.changedTouches[0].clientX;
		handleSwipe();
	});

	function handleSwipe() {
		const threshold = 50;
		const diff = startX - endX;

		if (Math.abs(diff) > threshold) {
			if (diff > 0) {
				nextSlide();
			} else {
				prevSlide();
			}
		}
	}

	// Auto-play (optional - uncomment to enable)
	// setInterval(nextSlide, 5000);
}

// Initialize when DOM is loaded
document.addEventListener("DOMContentLoaded", init);
